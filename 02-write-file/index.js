/*
    Внутри папки 02-write-file находится 1 файл index.js
    При выполнении команды node 02-write-file в папке 02-write-file создаётся текстовый файл,
     а в консоль выводится приглашение на ввод текста(На ваш выбор)
    После ввода текста в каталоге 02-write-file введённый текст должен быть записан в созданный ранее файл.
     Процесс не завершается и ждёт нового ввода.
    После следующего ввода созданный изначально текстовый файл дополняется новым
    текстом, процесс продолжает ждать ввод.
    При нажатии сочетания клавиш ctrl + c или вводе exit в консоль выводится прощальная фраза и процесс завершается.

 */

//Стандартный ввод (stdin)
//Стандартный вывод (stdout)
const { stdin: input, stdout: output } = require('process');

const {createWriteStream} = require('fs');

const {join} = require('path');

//В readline модуль предоставляет интерфейс для чтения данных из Удобочитаемый
// поток (например, process.stdin) по одной строке за раз.
const {createInterface} = require('readline');

let link = join(__dirname, 'text.txt');

let writeStream = createWriteStream(link, 'utf-8');

//Стандартный ввод (stdin)
//Стандартный вывод (stdout)
let read_line = createInterface({input, output});

output.write('Вводите текст: \n');



//Событие: 'line'
// В 'line' событие генерируется всякий раз, когда input поток получает ввод
// конца строки (\n, \r, или \r\n). Обычно это происходит, когда пользователь
// нажимает Входить ивввли Возвращение.

read_line.on('line', (input) => {
  //если  не exit   вызываем стрим и пишем  иначе выходим
  if (input.indexOf('exit') === -1) {
    writeStream.write(`${input} \n`);
  } else {
    read_line.close();
    writeStream.end();
    output.write('Конец');
  }
});

// сигнальное событие 'SIGINT' из терминала поддерживается на всех платформах и обычно может быть сгенерирован
// с помощью Ctrl+C (хотя это можно настроить).
read_line.on('SIGINT', () => {
  read_line.close();
  writeStream.end();
  output.write('Конец');
});


/*


Описание хода проверки задания 02-write-file:

    1) Откройте файл index.js находящийся в папке 02-write-file и проверьте его на наличие синхронных методов модуля fs (можно воспользоваться сочетанием клавиш ctrl + f и ввести в появившемся поле поиска Sync). В случае использования синхронных методов задание считается невыполненным - 0 баллов.
    2) Убедитесь, что в папке 02-write-file находится всего один файл с именем index.js. Если это не так, удалите всё лишние файлы из папки задания.
    3) Находясь в корневой директории репозитория выполните команду node 02-write-file и убедитесь, что в консоли появляется приглашение на ввод текста, а в каталоге 02-write-file был создан текстовый файл. В случае ошибок или мгновенного завершения работы задание считается невыполненным - 0 баллов.
    4) После ввода текста убедитесь, что ввод корректно записался в созданный текстовый файл. Если этого не произошло или процесс завершился не ожидая продолжения ввода задание считается невыполненным - 0 баллов.
    5) Используйте сочетание клавиш ctrl + c. В консоль должна быть выведена прощальная фраза с последующим завершением процесса. Если процесс не завершается или не выводится прощальная фраза вычитается 10 баллов.
    6) Запустите скрипт и введите exit. В консоль должна быть выведена прощальная фраза с последующим завершением процесса. Если процесс не завершается или не выводится прощальная фраза вычитается 10 баллов.

В случае успешной проверки всех пунктов за задание начисляется 20 баллов. Минимальная оценка - 0 баллов.

 */